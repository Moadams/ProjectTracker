spring.datasource.url=jdbc:postgresql://localhost:5432/buildmaster
spring.datasource.username=postgres
spring.datasource.password=5llsmu1
spring.datasource.driverClassName=org.postgresql.Driver
logging.level.org.springframework.security=DEBUG

spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

server.error.include-message=always
spring.data.mongodb.uri=mongodb://localhost:27017/auditlogsdb
management.endpoints.web.exposure.include=health,info,caches,metrics

# Spring Security & JWT Configuration
application.security.jwt.secret-key=QWZtbFBkYUxOUVFkTWphb3BtZk15SmJvdHhFVlNWUEdxYWx6R1dlU3RqbWtvWExHTXZqY2xLZ3FBZg==
application.security.jwt.expiration=900000
application.security.jwt.refresh-token.expiration=604800000

# Spring Security OAuth2 (Google)
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.provider.google.issuer-uri=https://accounts.google.com

# Spring Security OAuth2 (GitHub)
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_SECRET_ID}
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.github.scope=read:user,user:email

# H2 Console (controlled by Spring Security for ADMIN only in production)
spring.h2.console.enabled=true

# Security Header: Disable frame options for H2 console to work in browser. Remove in production if not needed.
spring.security.headers.frame-options=disable


